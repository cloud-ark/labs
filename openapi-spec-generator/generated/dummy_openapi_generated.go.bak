// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by pgname. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package generated

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.Operator":       schema_cloud_ark_kubeplus_openapi_spec_generator_typedir_Operator(ref),
		"github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.OperatorSpec":   schema_cloud_ark_kubeplus_openapi_spec_generator_typedir_OperatorSpec(ref),
		"github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.OperatorStatus": schema_cloud_ark_kubeplus_openapi_spec_generator_typedir_OperatorStatus(ref),
	}
}

func schema_cloud_ark_kubeplus_openapi_spec_generator_typedir_Operator(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Operator is a specification for a Operator resource",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.OperatorSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.OperatorStatus"),
						},
					},
				},
				Required: []string{"spec", "status"},
			},
		},
		Dependencies: []string{
			"github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.OperatorSpec", "github.com/cloud-ark/kubeplus/openapi-spec-generator/typedir.OperatorStatus"},
	}
}

func schema_cloud_ark_kubeplus_openapi_spec_generator_typedir_OperatorSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OperatorSpec is the spec for a OperatorSpec resource",
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"chartURL": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name", "chartURL"},
			},
		},
		Dependencies: []string{},
	}
}

func schema_cloud_ark_kubeplus_openapi_spec_generator_typedir_OperatorStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OperatorStatus is the status for a Operator resource",
				Properties: map[string]spec.Schema{
					"customResourceDefinitions": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"customResourceDefinitions", "status"},
			},
		},
		Dependencies: []string{},
	}
}
